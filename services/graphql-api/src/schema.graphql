enum MemberRole {
  ADMIN
  NORMAL
  FREE
}

type Task {
  id: String!
  name: String!
  description: String!
  frequency: Int!
}

type Apartment {
  id: String!
  name: String!
  #tasks: Task[]
}

type Profile {
  id: String!
  username: String!
  email: String
  role: MemberRole!
  apartmentId: String
  apartment: Apartment
}

type ShortProfile {
  id: String!
  username: String!
}

type Invitation {
  id: String!
  invitee: ShortProfile!
  inviter: ShortProfile!
  apartment: Apartment!
}

type Query {
  getMyProfile: Profile
  getMyInvitations: [Invitation]
  checkUsernameAvailable(username: String!): Boolean!
}

type Mutation {
  updateMyProfile(username: String!): Profile
  createApartment(name: String): Apartment
  invite(username: String!): Invitation
  rejectInvitation(id: ID!): Invitation
  acceptInvitation(id: ID!): Invitation
  #createTask(
  #name: String!
  #description: String!
  #frequency: Int!
  #): Task
}
