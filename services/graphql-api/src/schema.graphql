type Task {
  id: String!
  name: String!
  description: String!
  frequency: Int!
  start: String!
  end: String
  assignees: [String]
}

enum MembershipRole {
  ADMIN
  NORMAL
}

type Membership {
  userId: String!
  role: MembershipRole!
  user: ShortProfile!
}

type Apartment {
  id: String!
  name: String!
  tasks: [Task]
  members: [Membership]
}

type Profile {
  id: String!
  username: String!
  email: String
  apartmentId: String
  apartment: Apartment
}

type ShortProfile {
  id: String!
  username: String!
}

type Invitation {
  id: String!
  invitee: ShortProfile!
  inviter: ShortProfile!
  apartment: Apartment!
}

type Query {
  getMyProfile: Profile
  getMyInvitations: [Invitation]
  checkUsernameAvailable(username: String!): Boolean!
}

type Mutation {
  updateMyProfile(username: String!): Profile

  createApartment(name: String!): Apartment
  updateApartment(name: String!): Apartment
  assignAdmin(id: String!): Apartment
  leaveApartment: Profile 

  invite(email: String!): [Invitation]
  rejectInvitation(id: ID!): Invitation
  acceptInvitation(id: ID!): Invitation
  cancelInvitation(id: ID!): Invitation

  createTask(
    name: String!
    description: String!
    frequency: Int!
    start: String!
    end: String
    assignees: [String] # ids of assignees
  ): Task
  updateTaskProperties(
    id: String!
    name: String!
    description: String!
    frequency: Int!
    start: String!
    end: String
  ): Task
  updateTaskAssignees(
    id: String!
    assignees: [String]
  ): Task
  deleteTask(id: String!): Task
}
